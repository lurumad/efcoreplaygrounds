// <auto-generated />
using EFCore2Playgrounds.ManyToMany;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EFCore2Playgrounds.Migrations
{
    [DbContext(typeof(ManyToManyDbContext))]
    [Migration("20171001162333_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore2Playgrounds.ManyToMany.Category", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EFCore2Playgrounds.ManyToMany.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCore2Playgrounds.ManyToMany.OrderCategory", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("CategoryId");

                    b.HasKey("OrderId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("OrderCategories");
                });

            modelBuilder.Entity("EFCore2Playgrounds.ManyToMany.OrderCategory", b =>
                {
                    b.HasOne("EFCore2Playgrounds.ManyToMany.Category", "Category")
                        .WithMany("orderCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFCore2Playgrounds.ManyToMany.Order", "Order")
                        .WithMany("orderCategories")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
